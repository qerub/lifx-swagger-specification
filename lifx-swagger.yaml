info:
  title: API title
  version: 0.0.1
swagger: '2.0'
produces:
  - application/json
host: api.lifx.com
tags:
  - name: v1
    description: Operations about v1s
paths:
  /v1/lights:
    get:
      summary: List of all known lights
      description: List of all known lights
      produces:
        - application/json
      responses:
        '200':
          description: List of all known lights
      tags:
        - v1
      operationId: getV1Lights
  /v1/lights/states:
    put:
      summary: Sets multiple light states
      description: Sets multiple light states
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: formData
          name: 'states[][selector]'
          type: array
          items:
            type: string
          required: true
        - in: formData
          name: 'states[][power]'
          type: array
          items:
            type: string
          enum:
            - 'on'
            - 'off'
          required: false
        - in: formData
          name: 'states[][brightness]'
          type: array
          items:
            type: float
          required: false
        - in: formData
          name: 'states[][color]'
          type: array
          items:
            type: string
          required: false
        - in: formData
          name: 'states[][duration]'
          type: array
          items:
            type: float
          required: false
        - in: formData
          name: 'defaults[power]'
          type: string
          enum:
            - 'on'
            - 'off'
          required: false
        - in: formData
          name: 'defaults[brightness]'
          type: number
          format: float
          required: false
        - in: formData
          name: 'defaults[color]'
          type: string
          required: false
        - in: formData
          name: 'defaults[duration]'
          type: number
          format: float
          default: 1
          required: false
      responses:
        '200':
          description: Sets multiple light states
      tags:
        - v1
      operationId: putV1LightsStates
  '/v1/lights/{selector}':
    get:
      summary: Returns light(s) based on selector
      description: Returns light(s) based on selector
      produces:
        - application/json
      parameters:
        - in: path
          name: selector
          description: 'Format: ''[type]:[value]'', where type can be ''all'', ''id'', ''label'', ''group'', ''group_id'', ''location'', ''location_id'', ''scene_id'', and value is what you want to target.'
          type: string
          required: true
        - in: query
          name: refresh
          type: boolean
          default: true
          required: false
      responses:
        '200':
          description: Returns light(s) based on selector
      tags:
        - v1
      operationId: getV1LightsSelector
  '/v1/lights/{selector}/state':
    put:
      summary: Set light(s) state
      description: Set light(s) state
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: selector
          description: 'Format: ''[type]:[value]'', where type can be ''all'', ''id'', ''label'', ''group'', ''group_id'', ''location'', ''location_id'', ''scene_id'', and value is what you want to target.'
          type: string
          required: true
        - in: formData
          name: power
          type: string
          enum:
            - 'on'
            - 'off'
          required: false
        - in: formData
          name: brightness
          type: number
          format: float
          required: false
        - in: formData
          name: color
          type: string
          required: false
        - in: formData
          name: duration
          type: number
          format: float
          default: 1
          required: false
        - in: formData
          name: intensity
          type: number
          format: float
          required: false
      responses:
        '200':
          description: Set light(s) state
      tags:
        - v1
      operationId: putV1LightsSelectorState
  '/v1/lights/{selector}/toggle':
    post:
      summary: Toggle light(s) power state.
      description: Toggle light(s) power state.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: selector
          description: 'Format: ''[type]:[value]'', where type can be ''all'', ''id'', ''label'', ''group'', ''group_id'', ''location'', ''location_id'', ''scene_id'', and value is what you want to target.'
          type: string
          required: true
        - in: formData
          name: duration
          description: Duration in seconds. Defaults to 1.0
          type: number
          format: float
          default: 1
          required: false
      responses:
        '201':
          description: Toggle light(s) power state.
      tags:
        - v1
      operationId: postV1LightsSelectorToggle
  '/v1/lights/{selector}/cycle':
    post:
      summary: Cycle light(s) through states
      description: Cycle light(s) through states
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: selector
          description: 'Format: ''[type]:[value]'', where type can be ''all'', ''id'', ''label'', ''group'', ''group_id'', ''location'', ''location_id'', ''scene_id'', and value is what you want to target.'
          type: string
          required: true
        - in: formData
          name: 'states[][power]'
          type: array
          items:
            type: string
          enum:
            - 'on'
            - 'off'
          required: false
        - in: formData
          name: 'states[][brightness]'
          type: array
          items:
            type: float
          required: false
        - in: formData
          name: 'states[][color]'
          type: array
          items:
            type: string
          required: false
        - in: formData
          name: 'states[][duration]'
          type: array
          items:
            type: float
          required: false
        - in: formData
          name: 'defaults[power]'
          type: string
          enum:
            - 'on'
            - 'off'
          required: false
        - in: formData
          name: 'defaults[brightness]'
          type: number
          format: float
          required: false
        - in: formData
          name: 'defaults[color]'
          type: string
          required: false
        - in: formData
          name: 'defaults[duration]'
          type: number
          format: float
          default: 1
          required: false
        - in: formData
          name: direction
          type: string
          default: forward
          enum:
            - forward
            - backward
          required: false
      responses:
        '201':
          description: Cycle light(s) through states
      tags:
        - v1
      operationId: postV1LightsSelectorCycle
  '/v1/lights/{selector}/effects/breathe':
    post:
      summary: Perform a breathe effect on light(s)
      description: Perform a breathe effect on light(s)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: selector
          description: 'Format: ''[type]:[value]'', where type can be ''all'', ''id'', ''label'', ''group'', ''group_id'', ''location'', ''location_id'', ''scene_id'', and value is what you want to target.'
          type: string
          required: true
        - in: formData
          name: color
          description: |
            Colour of the waveform.
                      Quick examples:
                        * `green` - deep green, brightness untouched
                        * `blue brightness:100%` - deep blue, maximum brightness
                        * `hsb:0,1,1` - deep red, maximum brightness
                        * `random` - random hue, maximum saturation, brightness untouched
                        * `kelvin:2700` - warm white, brightness untouched
                        * `saturation:100%` - set maximum saturation
          type: string
          required: true
        - in: formData
          name: from_color
          description: |
            From colour of the waveform.
                      Quick examples:
                        * `green` - deep green, brightness untouched
                        * `blue brightness:100%` - deep blue, maximum brightness
                        * `hsb:0,1,1` - deep red, maximum brightness
                        * `random` - random hue, maximum saturation, brightness untouched
                        * `kelvin:2700` - warm white, brightness untouched
                        * `saturation:100%` - set maximum saturation
          type: string
          required: false
        - in: formData
          name: period
          description: Period of the waveform in seconds. Defaults to 1.0
          type: number
          format: float
          default: 1
          required: false
        - in: formData
          name: cycles
          description: Amount of cycles to repeat waveform. Defaults to 1
          type: number
          format: float
          default: 1
          required: false
        - in: formData
          name: persist
          description: 'If true, light(s) will keep its state at the end of the effect. Defaults to false'
          type: boolean
          required: false
        - in: formData
          name: power_on
          description: Turns the light on. Defaults to true
          type: boolean
          default: true
          required: false
        - in: formData
          name: peak
          description: 'Defines where in a `period` the target colour is at its maximum. Range: 0â€“1'
          type: number
          format: float
          default: 0.5
          required: false
      responses:
        '201':
          description: Perform a breathe effect on light(s)
      tags:
        - v1
      operationId: postV1LightsSelectorEffectsBreathe
  '/v1/lights/{selector}/effects/pulse':
    post:
      summary: Perform a pulse effect on light(s)
      description: Perform a pulse effect on light(s)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: selector
          description: 'Format: ''[type]:[value]'', where type can be ''all'', ''id'', ''label'', ''group'', ''group_id'', ''location'', ''location_id'', ''scene_id'', and value is what you want to target.'
          type: string
          required: true
        - in: formData
          name: color
          description: |
            Colour of the waveform.
                      Quick examples:
                        * `green` - deep green, brightness untouched
                        * `blue brightness:100%` - deep blue, maximum brightness
                        * `hsb:0,1,1` - deep red, maximum brightness
                        * `random` - random hue, maximum saturation, brightness untouched
                        * `kelvin:2700` - warm white, brightness untouched
                        * `saturation:100%` - set maximum saturation
          type: string
          required: true
        - in: formData
          name: from_color
          description: |
            From colour of the waveform.
                      Quick examples:
                        * `green` - deep green, brightness untouched
                        * `blue brightness:100%` - deep blue, maximum brightness
                        * `hsb:0,1,1` - deep red, maximum brightness
                        * `random` - random hue, maximum saturation, brightness untouched
                        * `kelvin:2700` - warm white, brightness untouched
                        * `saturation:100%` - set maximum saturation
          type: string
          required: false
        - in: formData
          name: period
          description: Period of the waveform in seconds. Defaults to 1.0
          type: number
          format: float
          default: 1
          required: false
        - in: formData
          name: cycles
          description: Amount of cycles to repeat waveform. Defaults to 1
          type: number
          format: float
          default: 1
          required: false
        - in: formData
          name: persist
          description: 'If true, light(s) will keep its state at the end of the effect. Defaults to false'
          type: boolean
          required: false
        - in: formData
          name: power_on
          description: Turns the light on. Defaults to true
          type: boolean
          default: true
          required: false
        - in: formData
          name: duty_cycle
          description: 'Ratio of the period where `color` is active. Only used for pulse. Defaults to 0.5. Range: 0â€“1'
          type: number
          format: float
          default: 0.5
          required: false
      responses:
        '201':
          description: Perform a pulse effect on light(s)
      tags:
        - v1
      operationId: postV1LightsSelectorEffectsPulse
  /v1/scenes:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: get Scene(s)
      tags:
        - v1
      operationId: getV1Scenes
  '/v1/scenes/{selector}/activate':
    put:
      summary: Activate a scene
      description: Activate a scene
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: selector
          description: 'Format: ''[type]:[value]'', where type can be ''scene_id'' and value is what you want to target.'
          type: string
          required: true
        - name: putV1ScenesSelectorActivate
          in: body
          required: true
          schema:
            $ref: '#/definitions/putV1ScenesSelectorActivate'
      responses:
        '200':
          description: Activate a scene
      tags:
        - v1
      operationId: putV1ScenesSelectorActivate
  /v1/color:
    get:
      summary: 'Parse a color string and return hue, saturation, brightness and kelvin values'
      description: 'Parse a color string and return hue, saturation, brightness and kelvin values'
      produces:
        - application/json
      parameters:
        - in: query
          name: string
          description: The color string to parse
          type: string
          required: true
      responses:
        '200':
          description: 'Parse a color string and return hue, saturation, brightness and kelvin values'
      tags:
        - v1
      operationId: getV1Color
definitions:
  putV1ScenesSelectorActivate:
    type: object
    properties:
      override:
        $ref: '#/definitions/putV1ScenesSelectorActivateOverride'
      selector:
        type: string
        description: 'Format: ''[type]:[value]'', where type can be ''scene_id'' and value is what you want to target.'
        readOnly: true
      duration:
        type: number
        format: float
        description: Duration in seconds. Defaults to 1.0
      ignore:
        type: '[String]'
    description: Activate a scene
  putV1ScenesSelectorActivateOverride:
    type: object
    properties:
      power:
        type: string
      color:
        type: string
      brightness:
        type: number
        format: float
      hue:
        type: number
        format: float
      saturation:
        type: number
        format: float
      kelvin:
        type: integer
        format: int32
        minimum: 2700
        maximum: 9000
    description: putV1ScenesSelectorActivate - override
